buildscript {
    dependencies {
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.15.0'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
    id("org.sonarqube") version "5.1.0.4882"
    id 'info.solidsoft.pitest' version '1.15.0'

}

apply plugin: 'info.solidsoft.pitest'

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = "1.6.0"
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.3.5'
    implementation "org.mapstruct:mapstruct:1.6.0"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.6.0", "org.projectlombok:lombok-mapstruct-binding:0.2.0"

    // utilitaires
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.17.0'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.34'

    runtimeOnly 'com.h2database:h2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.6.3"

}

tasks.named('test') {
    useJUnitPlatform()
}

pitest {
    targetClasses = ["com.example.firstproject.*"]
    timestampedReports = false
    junit5PluginVersion = '1.2.1'
    pitestVersion = '1.15.2'
    excludedClasses = ['com.example.firstproject.entities.*', 'com.example.firstproject.mappers.*']
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

sonarqube {
    properties {
        property 'sonar.exclusions', "**/com/example/firstproject/exceptions/**" +
                ",**/com/example/firstproject/models/**" +
                ",**/com/example/firstproject/entities/**" +
                ",**/com/example/firstproject/repositories/**" +
                ",**/com/example/firstproject/utils/**"
    }

}
