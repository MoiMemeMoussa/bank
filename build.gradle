plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    // pour gerer les validations: notNull, notEmpty....
    implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.1.0-M2'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.3.5'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.17.0'
}

tasks.named('test') {
    useJUnitPlatform()
}


jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}